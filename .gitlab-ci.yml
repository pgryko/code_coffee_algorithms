test cpp:
  # use the official gcc image, based on debian
  # can use verions as well, like gcc:5.2
  # see https://hub.docker.com/_/gcc/
  image: python:latest

  # Is performed before the scripts in the stages step
  before_script:
    - apt-get update
    - apt-get -y install cmake python3-pip python3-scipy build-essential gcc
    - git submodule update --init --recursive
  stage: test
  script:
    - cmake -H. -Bbuild
    - cd build;
    - make
    - ./unit_tests --gtest_output="xml:cpp_junit.xml"

  artifacts:
    reports:
      junit:
       - build/cpp_junit.xml

test python:
  image: python:latest

  # Is performed before the scripts in the stages step
#  before_script:
#    - apt-get update
#    - apt-get -y install cmake python3-pip python3-scipy python3-venv
#    - git submodule update --init --recursive
  stage: test
  script:
    - python3 -V # print version of python3
    - pip install poetry
    - poetry install
    - poetry run pytest --junitxml=build/pytest.xml --cov=src/
    - poetry run black src --check
    - poetry run flake8 --ignore=E501, W503, E722, E203 --max-line-length=100 --select=src/
  artifacts:
    reports:
      junit:
       - build/pytest.xml

  cache:
    paths:
      - .cache/pip
      - venv/